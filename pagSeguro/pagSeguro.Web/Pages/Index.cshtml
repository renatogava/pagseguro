@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<div class="text-center">
    <h1 class="display-4">Bem-vindo</h1>
    <p>Página de teste para Pagamentos via pagSeguro.</p>
</div>

<form id="form">

    <h2>Valor do Pedido</h2>

    <table>
        <tr>
            <td>
                <label for="totalPrice">Valor Total</label>
                <input type="number" id="totalPrice" value="50" />
            </td>
        </tr>
    </table>

    <h2>Dados do Cartão</h2>
    <table>
        <tr>
            <td>
                <label for="cardHolderName">Titular do Cartão</label>
                <input type="text" id="cardHolderName">
            </td>
        </tr>

        <tr>
            <td>
                <label for="cardNumber">Número do Cartão</label>
                <input type="text" id="cardNumber">
            </td>
        </tr>

        <tr>
            <td>
                <label for="cardExpiration">Expiração</label>
                <input type="text" id="cardExpiration">
            </td>
        </tr>

        <tr>
            <td>
                <label for="cardCode">Código de Segurança</label>
                <input type="text" id="cardCode">
            </td>
        </tr>

        <tr>
            <td>
                <label for="numberOfPayments">Número de Parcelas</label>
                <select id="numberOfPayments">
                </select>
            </td>
        </tr>
    </table>

    <h2>Dados do Titular do Cartão</h2>
    <table>
        <tr>
            <td>
                <label for="holderBirthDate">Data de Nascimento</label>
                <input type="text" id="holderBirthDate">
            </td>
        </tr>

        <tr>
            <td>
                <label for="holderCpf">CPF</label>
                <input type="text" id="holderCpf">
            </td>
        </tr>

        <tr>
            <td>
                <label for="holderCpf">Telefone</label>
                <input type="text" id="holderPhone">
            </td>
        </tr>
    </table>

    <h2>Campos Auxiliares</h2>

    <table>
        <tr>
            <td>
                <label for="sessionId">SessionId</label>
                <input type="text" id="sessionId" />
            </td>
        </tr>
        <tr>
            <td>
                <label for="senderHash">SenderHash</label>
                <input type="text" id="senderHash" />
            </td>
        </tr>
        <tr>
            <td>
                <label for="installmentValue">Valor da Parcela</label>
                <input type="text" id="installmentValue" />
            </td>
        </tr>

        <tr>
            <td>
                <label for="creditCardToken">Credit Card Token</label>
                <input type="text" id="creditCardToken" />
            </td>
        </tr>

        <tr>
            <td>
                <label for="creditCardType">Bandeira</label>
                <input type="text" id="creditCardType" />
            </td>
        </tr>

    </table>

    <input type="submit" value="Pagar" />
</form>

<script src="https://stc.pagseguro.uol.com.br/pagseguro/api/v2/checkout/pagseguro.directpayment.js"></script>

<script>

    const apiUrl = 'https://localhost:7037';

    const numberOfPayments = document.getElementById('numberOfPayments');
    const cardNumber = document.getElementById('cardNumber');
    const form = document.getElementById('form');

    document.addEventListener('DOMContentLoaded', () => {

        saveSessionId();

        saveSenderHash();
    });

    cardNumber.addEventListener('change', () => {

        var cardNumberValue = cardNumber.value.replace(/ /g, '');

        var parcelamentoMaximo = 12;

        getBrand(cardNumberValue, parcelamentoMaximo);
    });

    form.addEventListener('submit', (e) => {
        e.preventDefault();

        createCardToken();
    });

    numberOfPayments.addEventListener('change', () => {

        var selected = numberOfPayments.options[numberOfPayments.selectedIndex];

        var selectedInstallment = selected.dataset.installment;

        document.getElementById('installmentValue').value = selectedInstallment;
    });

    function saveSessionId() {

        var requestOptions = {
            method: 'POST',
            body: '',
            redirect: 'follow'
        };

        fetch(apiUrl + "/payments/getsessionid", requestOptions)
            .then(response => response.json())
            .then(json => {
                document.getElementById('sessionId').value = json.sessionId;
                PagSeguroDirectPayment.setSessionId(json.sessionId);
            })
            .catch(error => console.log('error', error));
    }

    function saveSenderHash() {
        var senderHash = PagSeguroDirectPayment.getSenderHash();

        if (senderHash == null || senderHash == '') {
            setTimeout(function () {
                saveSenderHash();
            }, 2000);
        }
        else {
            document.querySelector('#senderHash').value = senderHash;
        }
    }

    function getBrand(cardNumber, parcelamentoMaximo) {

        PagSeguroDirectPayment.getBrand({

            cardBin: cardNumber,
            success: function (response) {

                var creditCardBrandName = response.brand.name;

                if (creditCardBrandName != '') {

                    document.getElementById('creditCardType').value = creditCardBrandName;

                    getInstallments(creditCardBrandName, parcelamentoMaximo);
                }
                else {
                    exibirErro();
                }
            },
            error: function (response) {
                exibirErro();
            }
        });
    }

    function getInstallments(creditCardBrandName, parcelamentoMaximo) {

        esconderErro();

        var orderTotal = document.getElementById('totalPrice').value;

        var productValue = parseFloat(orderTotal).toFixed(2);

        PagSeguroDirectPayment.getInstallments({

            amount: productValue,
            maxInstallmentNoInterest: 12, // MÁXIMO DE PARCELAS SEM JUROS!
            brand: creditCardBrandName,
            success: function (response) {

                if (!response.error) {

                    //remove todas as opções de parcelamento
                    var i, L = numberOfPayments.options.length - 1;
                    for (i = L; i >= 0; i--) {
                        numberOfPayments.remove(i);
                    }

                    var tam = parcelamentoMaximo;
                    if (tam > response.installments[creditCardBrandName].length)
                        tam = response.installments[creditCardBrandName].length;

                    for (var j = 0; j < tam; j++) {

                        var auxObj = response.installments[creditCardBrandName][j];

                        var valorParcela = auxObj.installmentAmount.toFixed(2).replace('.', ',');
                        var valorTotal = auxObj.totalAmount.toFixed(2).replace('.', ',');

                        var obj = {
                            Id: auxObj.quantity,
                            texto: '' + auxObj.quantity + ' x ' + (auxObj.interestFree ? 'Sem Juros' : 'Com Juros') + ' de R$ ' + valorParcela + '. Total de R$ ' + valorTotal
                        };

                        var content = '<option value="' + obj.Id + '" data-installment="' + auxObj.installmentAmount + '"> ' + obj.texto + '</option>';

                        //insere opção de parcelamento
                        numberOfPayments.insertAdjacentHTML('beforeend', content);
                    };
                }
                else {
                    exibirErro();
                }
            },
            error: function (response) {
                exibirErro();
            }
        });
    }

    function createCardToken() {

        esconderErro();

        var cardNumberVal = cardNumber.value.replace(/ /g, '');
        var cvvVal = document.getElementById('cardCode').value.replace(/ /g, '');

        var expiration = document.getElementById('cardExpiration').value;

        var expirationMonthVal = expiration.substring(0, 2);
        var expirationYearVal = '20' + expiration.substring(3, 5);

        if (cardNumberVal != '' &&
            cvvVal != '' &&
            expirationMonthVal != '' &&
            expirationYearVal != '') {
            PagSeguroDirectPayment.createCardToken({
                cardNumber: cardNumberVal,
                cvv: cvvVal,
                expirationMonth: expirationMonthVal,
                expirationYear: expirationYearVal,
                success: function (response) {

                    var creditCardTokenVal = response.card.token;

                    document.getElementById('creditCardToken').value = creditCardTokenVal;
                },
                error: function (response) {
                    exibirErro();
                }
            });
        }
    }

    function exibirErro() {

    }

    function esconderErro() {

    }

</script>